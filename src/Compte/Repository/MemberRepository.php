<?php

namespace Compte\Repository;

use Doctrine\ORM\EntityRepository;
use Compte\Entity\Member;

/**
 * MemberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MemberRepository extends EntityRepository
{
    /**
     * @param $username
     * @return bool
     */
    public function MemberExist($identifiant) {

        $query = $this->createQueryBuilder('m')
                      ->select('m.id')
                      ->where('m.username = :identifiant')
                      ->orWhere('m.id = :identifiant')
                      ->setParameter(':identifiant', $identifiant)
                      ->getQuery();

        return $query->getOneOrNullResult() === null?false:true;
    }

    /**
     * @param $username
     * @param int $id
     * @return mixed
     */
    public function getMemberForGodFathering($username, $id = 1) {
        $query = $this->createQueryBuilder('m')
                      ->where('m.username = :username')
                      ->orWhere('m.id = :id')
                      ->setParameters(array(
                          ':username' => $username,
                          ':id' => $id
                      ))->getQuery();

        return $query->getOneOrNullResult();
    }


    /**
     * @param $identifiant
     * @return mixed
     */
    public function getMemberForConnect($identifiant){
        $query = $this->createQueryBuilder('m')
                      ->select('m.id, m.username, m.accountState as account_state, m.password')
                      ->innerJoin('m.role', 'r')
                      ->addSelect('r.id as role_id')
                      ->innerJoin('m.memberType', 'mt')
                      ->addSelect('mt.name as member_type')
                      ->where('m.username = :identifiant')
                      ->setParameter(':identifiant', $identifiant)
                      ->getQuery();

        $result = $query->getArrayResult();

        return !empty($result)?$result[0] : null;
    }
}
